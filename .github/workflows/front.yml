name: CI Workflow - Front

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install
        working-directory: ./front

      - name: Run tests and generate coverage report
        run: npm test
        working-directory: ./front

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage

  sonarQube:
    name: SonarQube Front
    needs: frontend-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Java Version
        run: java -version

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front # Sets the project to analyze
          args: >
            -Dsonar.projectKey=Honayme_OC-CI-CD
            -Dsonar.organization=bobappteam2024
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    name: Build and Push Front-End Docker Image
    needs: sonarQube
    runs-on: ubuntu-latest
    if: ${{github.event.review.state == 'approved' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}

    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies and build
        working-directory: front
        run: |
          npm install
          npm run build --prod

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back

      - name: Build and push front-end Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}